<?php
/**
 * Created by PhpStorm.
 * User: User
 * Date: 7/4/2018
 * Time: 3:23 PM
 */

namespace frontend\controllers;
use common\models\News;
use common\models\Videos;
use yii\web\Controller;
use Yii;
use yii\data\Pagination;
use yii\web\NotFoundHttpException;

class NewsController extends Controller
{

    private $lang = 'ru';

    public function beforeAction($action)
    {
        $lang = Yii::$app->session->get('lang');
        if( $lang =='' ) $lang = 'ru';
        $this->lang = $lang;

        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    // 5 новостей
    public function actionIndex(){

        if(!$news = News::find()->where(['status' => 1])->limit(5)->all()){
            $news = false;
        }

        return $this->render('news', [
            'news' => $news,
            'lang' => $this->lang,
            //'pages' => $pages,
        ]);
    }

    // архив новостей
    public function actionArchive(){

        /*$query = News::find()->where(['status'=>1])->orderBy('date ASC');

        $count = $query->count();
        $pages = new Pagination(['totalCount' => $count, 'defaultPageSize'=>6]);
        if( !$news = $query->offset($pages->offset)
            ->limit($pages->limit)
            ->all() ) {
            $news = false;
        } */

        // $min_year = News::getMinYear();

        if(!$years_list = News::find()->select('YEAR(FROM_UNIXTIME(date)) as year_list')->where(['status'=>1])->groupBy('year_list')->all()){
            $years_list = false;
        }
        //echo '<pre>';print_r($news_years); exit;


        $year = date('Y'); // текущий год
        $date_from = strtotime('1.01.' . $year); // начало года
        $date_to = strtotime('31.12.' . $year); // конец года
        if(!$news = News::find()->where(['status' => 1])->andWhere(['between','date',$date_from,$date_to])->orderBy('date DESC')/*->limit(5)*/->all()){
            $news = false;
        }
        return $this->render('archive', [
            'news' => $news,
            'years_list' => $years_list,
            'lang' => $this->lang,
        ]);
    }

    // ajax получение новостей за выбранный год
    public function actionGetArchive(){
        $this->layout = false;

        if(! Yii::$app->request->isAjax) return json_encode(['status'=>222]);

        $year = (int)Yii::$app->request->post('year'); // переданный год
        $date_from = strtotime('1.01.' . $year); // начало года
        $date_to = strtotime('31.12.' . $year); // конец года

        if(!$news = News::find()->where(['status' => 1])->andWhere(['between','date',$date_from,$date_to])/*->limit(5)*/->all()){
            $news = false;
        }

        $view = $this->render('ajax-archive', [
            'news' => $news,
            'lang' => $this->lang,
        ]);

        return json_encode(['status'=>1,'html' => $view]);

    }




    public function actionItem($link){

        if(!$news = News::find()->with('gallery')->where(['link_'.$this->lang => $link])->one()){
            $news = false;
        }

        /* if(!$news_all=News::find()->where(['status'=>1])->andWhere(['<>', 'id', $link])->limit(3)->all()){
            $news_all = false;
        } */

        return $this->render('newsItem', [
            'news'=>$news,
            //'news_all'=>$news_all,
            'lang'=>$this->lang,
        ]);
    }

    protected function findModel($id)
    {
        if (($model = News::findOne($id)) !== null) {
            return $model;
        } else {
            throw new NotFoundHttpException('The requested page does not exist.');
        }
    }

}