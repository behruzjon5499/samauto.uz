<?php

namespace frontend\controllers;

use common\models\CareerHistory;
use common\models\CareerInfo;
use common\models\CareerMain;
use common\models\CareerMainList;
use common\models\CareerQuestion;
use common\models\Vacancy;
use common\models\VacancyCategory;
use common\models\VacancyRequest;
use Yii;
use yii\helpers\VarDumper;
use yii\web\Controller;
use yii\web\UploadedFile;

class CareerController extends Controller
{
    private $lang = 'ru';

    public function beforeAction($action)
    {
        $lang = Yii::$app->session->get('lang');
        if ($lang == '') $lang = 'ru';
        $this->lang = $lang;

        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionIndex()
    {
        $lang = $this->lang;
        $main = CareerMain::findOne(1);
        $list = CareerMainList::find()->all();
        $model = new CareerQuestion();

        if ($model->load(Yii::$app->request->post())) {
            $model->save();
            return $this->redirect('/career');
        }

        return $this->render('index', compact('model', 'main', 'lang', 'list'));
    }

    public function actionVacancies()
    {
        $lang = $this->lang;
        $vacanciesCategory = VacancyCategory::find()->where(['status' => 1])->all();

        return $this->render('vacancies', compact('vacanciesCategory', 'lang'));
    }

    public function actionVacancyCategory($id)
    {
        $time = new \DateTime('now');
        $today = $time->format('Y-m-d');
        $t = strtotime($today);
//        VarDumper::dump($t, 12, true);
//        die();
        $lang = $this->lang;
        $title = 'descr_' . $lang;
        $title = VacancyCategory::find()->where(['id' => $id])->one()->$title;
        $vacancies = Vacancy::find()->where(['status' => 1, 'category_id' => $id])->andWhere(['>', 'date'  ,$t])->all();

        return $this->render('vacancy-category', compact('lang', 'vacancies', 'title'));
    }

    public function actionVacancy($id)
    {
        $lang = $this->lang;
        $model = new VacancyRequest();
        $vacancy = Vacancy::find()->where(['status' => 1, 'id' => $id])->limit(1)->one();

        if (Yii::$app->request->isPost && $model->load(Yii::$app->request->post())) {
            if (!empty($_FILES['VacancyRequest']['name']['file'])) {
                $model->file = $_POST['VacancyRequest']['file'];
                $model->file = UploadedFile::getInstance($model, 'file');
                $model->vacancy_id = $id;
                $model->upload();
                    $model->save(false);
                Yii::$app
                    ->mailer
                    ->compose(['html' => 'request/confirm-html', 'text' => 'request/confirm-text'])
                    ->setFrom('no-reply@samauto.uz')
                    ->setTo($model->email)
                    ->setSubject('Welcome to samauto')
                    ->send();
            }
            return $this->redirect(['vacancy', 'id' => $id]);
        }

        return $this->render('vacancy', compact('lang', 'vacancy', 'model'));
    }

    public function actionHistoryList()
    {
        $lang = $this->lang;
        $histories = CareerHistory::find()->where(['status' => 1])->all();

        return $this->render('history-list', compact('lang', 'histories'));
    }

    public function actionHistory($id)
    {
        $lang = $this->lang;
        $history = CareerHistory::find()->where(['status' => 1, 'id' => $id])->limit(1)->one();

        return $this->render('history', compact('history', 'lang'));
    }

    public function actionInformationList()
    {
        $lang = $this->lang;
        $informations = CareerInfo::find()->where(['status' => 1])->all();

        return $this->render('information-list', compact('lang', 'informations'));
    }

    public function actionInformation($id)
    {
        $lang = $this->lang;
        $information = CareerInfo::find()->where(['status' => 1, 'id' => $id])->limit(1)->one();
        $model = new CareerQuestion();

        if ($model->load(Yii::$app->request->post())) {
            $model->save();
            return $this->redirect(['information', 'id' => $id]);
        }

        return $this->render('information', compact('lang', 'information', 'model'));
    }


    public function actionAnimate()
    {

        return $this->renderFile('@frontend/views/transport/index.html', [

        ]);
    }
}