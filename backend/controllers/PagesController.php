<?php

namespace backend\controllers;

use common\helpers\TextHelper;
use common\models\Gallery;
use Yii;
use common\models\Pages;
use common\models\News;
use common\models\NewsSearch;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;


use yii\imagine\Image;
use yii\web\UploadedFile;

/**
 * NewsController implements the CRUD actions for News model.
 */
class PagesController extends Controller
{
    public function behaviors()
    {
        return [
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['post'],
                ],
            ],
        ];
    }
    public function beforeAction($action)
    {
        if(Yii::$app->user->isGuest){
            header('location:/admin/login');
            exit;
        }
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }
    /**
     * Lists all News models.
     * @return mixed
     */
    public function actionIndex()
    {
        $searchModel = new NewsSearch();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);

        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }


    // главная страница
    public function actionMain(){

        if($pages = Pages::find()->where(['page'=>'main'])->one()){
            $gallery = Gallery::find()->all(); // все изображения для галлереи главной
            $data = json_decode($pages->data,true);
        }else{
            $pages = new Pages();
            $gallery = [];
            $data=[];
        }

        if ( $this->update($pages,'main') ){
           // echo 'ddd'; exit;
            Yii::$app->cache->delete('page');

            return $this->redirect('/admin/pages/main');
        }

        //print_r($data); exit;


        return $this->render('main', [
            'model'=>$pages,
            'gallery' => $gallery,
            'data' => $data,
        ]);
    }

    // страница о нас
    public function actionContacts()
    {

        if ($pages = Pages::find()->where(['page' => 'contacts'])->one()) {
            $data = json_decode($pages->data, true);
        } else {
            $pages = new Pages();
            $pages->page = 'contacts';
            $data = [];
        }   // страница контакты

        $post = Yii::$app->request->post();

        //print_r($post); exit;

        if( isset($post['Pages']['page']) && $post['Pages']['page'] == 'contacts' ){

            $pages->data = json_encode($post['pages'],JSON_UNESCAPED_UNICODE);


            if(!$pages->save()){
                print_r($pages->getErrors());
                exit;
            }
            return $this->redirect('/admin/pages/contacts');

        }


        return $this->render('contacts', [
            'data' => $data,
        ]);

    }

    // опции админки
    public function actionOptions()
    {

        if ($pages = Pages::find()->where(['page' => 'admin-options'])->one()) {
            $data = json_decode($pages->data, true);
        } else {
            $pages = new Pages();
            $pages->page = 'admin-options';
            $data = [];
        }   // страница контакты

        $post = Yii::$app->request->post();

        //print_r($post); exit;

        if( isset($post['Pages']['page']) && $post['Pages']['page'] == 'admin-options' ){

            $pages->data = json_encode($post['pages'],JSON_UNESCAPED_UNICODE);


            if(!$pages->save()){
                print_r($pages->getErrors());
                exit;
            }
            return $this->redirect('/admin/pages/options');

        }


        return $this->render('admin-options', [
            'data' => $data,
        ]);

    }

    // доставка
    public function actionDelivery()
    {

        if ($pages = Pages::find()->where(['page' => 'delivery'])->one()) {
            $data = json_decode($pages->data, true);
        } else {
            $pages = new Pages();
            $pages->page = 'delivery';
            $data = [];
        }   // страница контакты

        $post = Yii::$app->request->post();

        // print_r( $post ); exit;

        if( isset($post['Pages']['page']) && $post['Pages']['page'] == 'delivery' ){

            $post['info']['price'] = (int) $post['info']['price'];

            $pages->data = json_encode($post['info'],JSON_UNESCAPED_UNICODE);


            if(!$pages->save()){
                print_r($pages->getErrors());
                exit;
            }
            return $this->redirect('/admin/pages/delivery');

        }


        return $this->render('delivery', [
            'data' => $data,
        ]);

    }

    public function actionAbout(){

        if($pages = Pages::find()->where(['page'=>'about'])->one()) {
            $data = json_decode($pages->data, true);
            if (!$gallery = Gallery::find()->where(['type' => 1])->all()) {
                $gallery = false;
            }
        }else{
            $pages = new Pages();
            $pages->page = 'about';
            $data=[];

        }

        $post = Yii::$app->request->post();

        if( isset($post['Pages']['page']) && $post['Pages']['page'] == 'about' ){

            // print_r([$post,$_FILES]); exit;

            // заменяем watch на embed
            // $post['info']['video_link'] = str_replace('watch?v=','embed/',$post['info']['video_link']);

            if(isset($post['info']['video_link'])){
                $yoututbe_link = explode('=',$post['info']['video_link']);
                // берем только код в ссылке после знака =
                $post['info']['video_link'] = $yoututbe_link[1];
            }

            $pages->data = json_encode($post['info'],JSON_UNESCAPED_UNICODE);

            $model = new Gallery();

            // изображения слайдера
            if( $files = UploadedFile::getInstances($model, 'tmp_gallery_images' ) ){

                $deleted_files = explode(';',$post['delete_gallery_files']);

                //print_r($deleted_files); exit;

                $i=0;
                foreach($files as $file){
                    $i++;
                    // данный файл удален пользователем
                    if( in_array($i,$deleted_files)) continue;

                    $fid = time()+$i;
                    $fname = $fid . '.' . $file->extension ;

                    $path = Yii::getAlias("@frontend/web/uploads/gallery/about/" );

                    if(!is_dir($path)) @mkdir($path);
                    if(!is_dir($path .'thumb')) @mkdir($path.'thumb');

                    // основная картинка - оригинал
                    $file->saveAs( $path . $fname ); // . $file->extension);

                    $gallery = new Gallery();
                    $gallery->title = '.';
                    $gallery->descr = '.';
                    $gallery->image = $fname;
                    $gallery->type = 1;
                    $gallery->status = 1;
                    if(!$gallery->save()){
                        print_r($gallery->getErrors());
                        exit;
                    }

                    $filepath = $path . $fname;

                    // эскиз
                    Image::thumbnail($filepath, 200, 160)
                        ->save($path . 'thumb/' . $fname , ['quality' => 100]);

                    Image::thumbnail($filepath, 600, 380)
                        ->save($path . $fname , ['quality' => 100]);

                    // удалить оригинал 'orig_'
                    //@unlink($filepath);
                }


            } // tmp_gallery_images

            if(!$pages->save()){
                print_r($pages->getErrors());
                exit;
            }
            return $this->redirect('/admin/pages/about');

        }

        return $this->render('about', [
            'data' => $data,
            'gallery' => $gallery,
        ]);
    }

    public function actionSymbols(){

        if($pages = Pages::find()->where(['page'=>'symbols'])->one()) {
            $data = json_decode($pages->data, true);
        }else{
            $pages = new Pages();
            $pages->page = 'symbols';
            $data=[];

        }

        $post = Yii::$app->request->post();

        if( isset($post['Pages']['page']) && $post['Pages']['page'] == 'symbol' ){

           // print_r([$post,$_FILES]); exit;

            $pages->data = json_encode($post['info'],JSON_UNESCAPED_UNICODE);

            // изображения инфо блока салон на главной
            if( $file = UploadedFile::getInstance($pages, 'tmp_flag' ) ){

                $fname =  'flag.svg';// . $file->extension ;

                $path = Yii::getAlias("@frontend/web/uploads/symbols/" );

                if(!is_dir($path)) @mkdir($path);

                // основная картинка - оригинал
                $file->saveAs($path . $fname );

            }

            // изображения инфо блока салон на главной
            if( $file = UploadedFile::getInstance($pages, 'tmp_gerb' ) ){

                $fname =  'gerb.svg';// . $file->extension ;

                $path = Yii::getAlias("@frontend/web/uploads/symbols/" );

                if(!is_dir($path)) @mkdir($path);

                // основная картинка - оригинал
                $file->saveAs($path . $fname );

            }

            // изображения инфо блока салон на главной
            if( $file = UploadedFile::getInstance($pages, 'tmp_gimn' ) ){

                $fname =  'gimn.svg';// . $file->extension ;

                $path = Yii::getAlias("@frontend/web/uploads/symbols/" );

                if(!is_dir($path)) @mkdir($path);

                // основная картинка - оригинал
                $file->saveAs($path . $fname );

            }

            if(!$pages->save()){
                print_r($pages->getErrors());
                exit;
            }
            return $this->redirect('/admin/pages/symbols');

        }

        return $this->render('symbols', [
            'data' => $data,
        ]);
    }


    public function actionFiles($type=1){

        $this->enableCsrfValidation = false;

        set_time_limit(300);
        ini_set('max_execution_time', 300); //300 seconds = 5 minutes
        ini_set('max_execution_time', 300); //0=NOLIMIT

        ini_set('upload_max_filesize', '30M');
        ini_set('post_max_size', '30M');

        //echo ini_get("max_execution_time");

        if($pages = Pages::find()->where(['page'=>'files'])->one()) {
            $data = json_decode($pages->data, true);
        }else{
            $pages = new Pages();
            $pages->page = 'files';
            $data=[];

        }

        $post = Yii::$app->request->post();

        if( isset($post['Pages']['page']) && $post['Pages']['page'] == 'files' ){

            //print_r([$post,$_FILES]); exit;

            // изображения инфо блока салон на главной
            if( $file = UploadedFile::getInstance($pages, 'tmp_file_price' ) ){

                $fname =  TextHelper::Transliterate($file->baseName) . '.' . $file->extension;

                $path = Yii::getAlias("@frontend/web/uploads/files/" );

                if(!is_dir($path)) @mkdir($path);

                // сохраняем файл
                $file->saveAs($path . $fname );

                $data['file_price'] = $fname;

            }

            // изображения инфо блока салон на главной
            if( $file = UploadedFile::getInstance($pages, 'tmp_file_catalog' ) ){

                $fname =  TextHelper::Transliterate($file->baseName) . '.' . $file->extension;

                $path = Yii::getAlias("@frontend/web/uploads/files/" );

                if(!is_dir($path)) @mkdir($path);

                // сохраняем файл
                $file->saveAs($path . $fname );

                $data['file_catalog'] = $fname;

            }

            // изображения инфо блока салон на главной
            if( $file = UploadedFile::getInstance($pages, 'tmp_file_diller_sert' ) ){

                $fname =  TextHelper::Transliterate($file->baseName) . '.' . $file->extension;

                $path = Yii::getAlias("@frontend/web/uploads/files/" );

                if(!is_dir($path)) @mkdir($path);

                // сохраняем файл
                $file->saveAs($path . $fname );


                $data['file_diller_sert'] = $fname;

            }

            $pages->data = json_encode( $data,JSON_UNESCAPED_UNICODE );

            if(!$pages->save()){
                print_r($pages->getErrors());
                exit;
            }

            return $this->redirect('/admin/pages/files?type='.$type);

        }

        //echo  $type; exit;


        return $this->render('files_' . $type, [
            'data' => $data,
        ]);

    }



    private function update(&$model, $page){

        $post = Yii::$app->request->post();


        if($model->load($post) ) {

            $model->data = json_encode($post['pages'],JSON_UNESCAPED_UNICODE);


            // изображения инфо блока салон на главной
            if( $file = UploadedFile::getInstance($model, 'tmp_image' ) ){


                $fname =  'info.jpg';// . $file->extension ;

                $path = Yii::getAlias("@frontend/web/uploads/pages/{$page}/" );

                // удалить старое изображение, нужно если разное расширение
               // @unlink($path . $fname);

                if(!is_dir($path)) @mkdir($path);

                // основная картинка - оригинал
                $file->saveAs($path . $fname );

                // echo 'ok'; exit;


            }

            // изображения инфо-блока 3 шт
            if( $files = UploadedFile::getInstances($model, 'tmp_images' ) ){

                $_files = @$_FILES['Pages']['name']['tmp_images'];

                //print_r($_files);
                $fid = 0;
                foreach($files as $file){

                    foreach($_files as $key=>$_file ){
                        if( $_file != '' ){
                            $fid = $key+1; // имя тек файла = id загружаемого
                            unset($_files[$key]);
                            break;
                        }
                    }

                    $fname = 'image_'.$fid.'.jpg'; // . $file->extension ;

                    $path = Yii::getAlias("@frontend/web/uploads/reviews/" );

                    if(!is_dir($path)) @mkdir($path);
                    if(!is_dir($path.'thumb')) @mkdir($path.'thumb');


                    $filepath = $path . $fname;

                    // основная картинка - оригинал
                    $file->saveAs( $filepath ); // . $file->extension);

                    // эскиз
                    Image::thumbnail($filepath, 200, 100)
                        ->save($path . 'thumb/' . $fname , ['quality' => 100]);

                    // эскиз
                    Image::thumbnail($filepath, 380, 195)
                        ->save($path . $fname , ['quality' => 100]);

                }

            }


            // изображения меню-блока 3 шт
            if( $files = UploadedFile::getInstances($model, 'tmp_images_menu' ) ){

                /*$i=3;
                foreach($files as $file){
                    $i++; // c 4 по 6 */

                $_files = @$_FILES['Pages']['name']['tmp_images_menu'];

                //print_r($_files); exit;
                $fid = 0;
                foreach($files as $file){

                    foreach($_files as $key=>$_file ){
                        if( $_file != '' ){
                            $fid = $key+4; // имя тек файла = id загружаемого
                            unset($_files[$key]);
                            break;
                        }
                    }

                    $fname = 'image_'.$fid.'.jpg'; // . $file->extension ;

                    $path = Yii::getAlias("@frontend/web/uploads/pages/main/info/" );

                    if(!is_dir($path)) @mkdir($path);

                    // основная картинка - оригинал
                    $file->saveAs( $path . $fname ); // . $file->extension);

                    @chmod($path . $fname,0775);

                }

            }

            // изображения слайдера
            if( $files = UploadedFile::getInstances($model, 'tmp_gallery_images' ) ){

                $deleted_files = explode(';',$post['delete_gallery_files']);

                //print_r($deleted_files); exit;

                $i=0;
                foreach($files as $file){
                    $i++;
                    // данный файл удален пользователем
                    if( in_array($i,$deleted_files)) continue;

                    $fid = time()+$i;
                    $fname = $fid . '.' . $file->extension ; // preg_replace('/tmp_/','',$image); //  убрать префикс

                    $path = Yii::getAlias("@frontend/web/uploads/pages/main/slider/" );

                    // удалить старое изображение - удаляется через ajax
                    //@unlink($path . $image . '.jpg'); // имя + расширение всегда jpg
                    //@unlink($path . 'thumb/' . $image .  '.jpg');

                    if(!is_dir($path)) @mkdir($path);
                    // if(!is_dir($path.'thumb')) @mkdir($path .'thumb');

                    //$fname = $image; // $model->id; //time() ; // $model->id; // ? $model->image: time();

                    // основная картинка - оригинал
                    $file->saveAs( $path . $fname ); // . $file->extension);

                    $gallery = new Gallery();
                    //$gallery->date = time();
                    $gallery->image = $fname;
                    $gallery->save();

                    $filepath = $path . $fname;

                    // эскиз
                    Image::thumbnail($filepath, 200, 150)
                        ->save($path . 'thumb/' . $fname , ['quality' => 100]);

                    // удалить оригинал 'orig_'
                    //@unlink($filepath);
                }



            } // tmp_gallery_images


            if( !$model->save() ){
                Yii::$app->session->setFlash('info-error','Ошибка при сохранении документа!');
                print_r($model->getErrors());
                exit;

                return true;
            }

           // print_r([$post,$_FILES]); exit;

            Yii::$app->session->setFlash('info-success','Страница успешно сохранена!');

            return true;
        }
        return false;
    }

    // удаление изображения из галереи
    public function actionDeleteGalleryItem()
    {
        $id = (int)Yii::$app->request->post('id');
        if($gallery = Gallery::findOne($id)){

            if( $gallery->type==0 ) { // фото слайдера на главной
                $path = Yii::getAlias("@frontend/web/uploads/gallery/slider/");

            }elseif( $gallery->type==1 ) { // фото для слайдера about
                $path = Yii::getAlias("@frontend/web/uploads/gallery/about/" );

            }

            @unlink($path . $gallery->image);
            @unlink($path . 'thumb/'. $gallery->image);
            
            $gallery->delete();

            echo json_encode(['status'=>1]);
        }else{
            echo json_encode(['status'=>0]);
        }

        exit;
    }

    // удаление изображения из галереи запчастей
    public function actionDeleteGalleryPartItem()
    {
        $id = (int)Yii::$app->request->post('id');
        if($gallery = Pages::find()->where(['page'=>'services-parts'])->one() ){

            $data = json_decode($gallery->data,true);

            $path = Yii::getAlias("@frontend/web/uploads/services/gallery/" );

            @unlink($path . $data['gallery'][$id]);

            unset($data['gallery'][$id]);

            $gallery->data = json_encode($data,JSON_UNESCAPED_UNICODE);
            $gallery->save();

            echo json_encode(['status'=>1]);
        }else{
            echo json_encode(['status'=>0]);
        }

        exit;
    }

    // удаление изображения
    public function actionDeleteImage()
    {
        $id = (int)Yii::$app->request->post('id');

        $path = Yii::getAlias("@frontend/web/uploads/pages/main/info/");

        @unlink($path . 'image_'.$id . '.jpg');

        echo json_encode(['status'=>222]);

        exit;
    }

    // удаление файла прайса, каталога
    public function actionDeleteFile()
    {
        $id = (int)Yii::$app->request->post('id');

        if( $page = Pages::find()->where(['page'=>'files'])->one() ) {

            $_file_id[1]='file_price';
            $_file_id[2]='file_catalog';
            $_file_id[3]='file_diller_sert';

            $data = json_decode($page->data,true);
            $path = Yii::getAlias("@frontend/web/uploads/files/");

            @unlink($path . $data[$_file_id[$id]]);

            $data[$_file_id[$id]] = '';
            $page->data = json_encode($data,JSON_UNESCAPED_UNICODE);

            if( $page->save()) return json_encode(['status' => 1]);

        }

        return json_encode(['status'=>0]);
    }

    // services ----------------------

    public function actionServicesWarranty(){

        if($pages = Pages::find()->where(['page'=>'services-warranty'])->one()) {
            $data = json_decode($pages->data, true);
        }else{
            $pages = new Pages();
            $pages->page = 'services-warranty';
            $data=[];
        }

        $post = Yii::$app->request->post();

        if( isset($post['Pages']['page']) && $post['Pages']['page'] == 'services-warranty' ){

            // изображения инфо блока салон на главной
            if( $file = UploadedFile::getInstance($pages, 'tmp_image' ) ){

                $fname =  'warranty.jpg'; // . $file->extension ;

                $path = Yii::getAlias("@frontend/web/uploads/services/" );

                if(!is_dir($path)) @mkdir($path);

                // основная картинка - оригинал
                $file->saveAs($path . $fname );

            }

            // файл гарантий
            if ( $file = UploadedFile::getInstance($pages, 'tmp_file') ) {

                $old_fname = @$data['file'];

                $fname = TextHelper::Transliterate($file->baseName) . '.' . $file->extension;

                $path = Yii::getAlias("@frontend/web/uploads/services/");

                if (!is_dir($path)) @mkdir($path);

                // сохраняем файл
                $file->saveAs($path . $fname);

                //$data['file'] = $fname;

                @unlink($old_fname);

                $post['info']['file'] = $fname;

            }else{
                $post['info']['file'] = @$data['file'];
            }

            // файл гарантий
            if ( $file = UploadedFile::getInstance($pages, 'tmp_file2') ) {

                $old_fname = @$data['file2'];

                $fname = TextHelper::Transliterate($file->baseName) . '.' . $file->extension;

                $path = Yii::getAlias("@frontend/web/uploads/services/");

                if (!is_dir($path)) @mkdir($path);

                // сохраняем файл
                $file->saveAs($path . $fname);

                //$data['file'] = $fname;

                @unlink($old_fname);

                $post['info']['file2'] = $fname;

            }else{
                $post['info']['file2'] = @$data['file2'];
            }

            $pages->data = json_encode( $post['info'],JSON_UNESCAPED_UNICODE );

            if(!$pages->save()){
                print_r($pages->getErrors());
                exit;
            }

            return $this->redirect('/admin/pages/services-warranty');

        }


        return $this->render('services-warranty', [
            'data' => $data,
        ]);
    }

    // удаление файла гарантии
    public function actionDeleteWarrantyFile()
    {

        if( $page = Pages::find()->where(['page'=>'services-warranty'])->one() ) {

            $id = (int)Yii::$app->request->post('id');

            $data = json_decode($page->data,true);
            $path = Yii::getAlias("@frontend/web/uploads/services/");

            if($id==1) {
                @unlink($path . $data['file']);
                $data['file'] = '';
            }elseif($id==2){
                @unlink($path . $data['file2']);
                $data['file2'] = '';
            }

            $page->data = json_encode($data,JSON_UNESCAPED_UNICODE);

            if( $page->save()) return json_encode(['status' => 1]);

        }

        return json_encode(['status'=>0]);
    }

    public function actionServicesCentres(){

        if($pages = Pages::find()->where(['page'=>'services-centres'])->one()) {
            $data = json_decode($pages->data, true);
        }else{
            $pages = new Pages();
            $pages->page = 'services-centres';
            $data=[];
        }

        $post = Yii::$app->request->post();

        if( isset($post['Pages']['page']) && $post['Pages']['page'] == 'services-centres' ){

            $pages->data = json_encode($post['info'],JSON_UNESCAPED_UNICODE);

            // изображения инфо блока салон на главной
            if( $file = UploadedFile::getInstance($pages, 'tmp_image' ) ){

                $fname =  'centres.jpg'; // . $file->extension ;

                $path = Yii::getAlias("@frontend/web/uploads/services/" );

                if(!is_dir($path)) @mkdir($path);

                // основная картинка - оригинал
                $file->saveAs($path . $fname );

            }

            if(!$pages->save()){
                print_r($pages->getErrors());
                exit;
            }

            return $this->redirect('/admin/pages/services-centres');

        }

        return $this->render('services-centres', [
            'data' => $data,
        ]);
    }

    public function actionServicesParts(){

        if( $pages = Pages::find()->where(['page'=>'services-parts'])->one() ) {
            $data = json_decode($pages->data, true);
        }else{
            $pages = new Pages();
            $pages->page = 'services-parts';
            $data = [];
        }

        $post = Yii::$app->request->post();


        if( isset($post['Pages']['page']) && $post['Pages']['page'] == 'services-parts' ){

            // изображения инфо блока салон на главной
            if( $file = UploadedFile::getInstance($pages, 'tmp_image' ) ){

                $fname =  'parts.jpg'; // . $file->extension ;

                $path = Yii::getAlias("@frontend/web/uploads/services/" );

                if(!is_dir($path)) @mkdir($path);

                // основная картинка - оригинал
                $file->saveAs($path . $fname );

            }

            // изображения галереи
            if( $files = UploadedFile::getInstances($pages, 'tmp_gallery_images' ) ) {

                $deleted_files = explode(';', $post['delete_gallery_files']);

                $path = Yii::getAlias("@frontend/web/uploads/services/gallery/");
                if(!is_dir($path)) @mkdir($path);

                $gallery = isset( $data['gallery'] ) && count( $data['gallery'] ) ? $data['gallery'] : [];

                $i = 0;
                foreach ($files as $file) {
                    $i++;
                    if( ! preg_match('/image/',$file->type) ) continue; // пропустить если не картинка

                    // данный файл удален пользователем
                    if (in_array($i, $deleted_files)) continue;

                    $fid = time() + $i;
                    $fname = $fid . '.' . $file->extension;

                    // основная картинка - оригинал
                    $file->saveAs($path . $fname);

                    $gallery[] = $fname;

                    // эскиз
                    /* Image::thumbnail($filepath, 100, 50)
                        ->save($path . 'thumb/' . $fname , ['quality' => 100]); */

                }
                $post['info']['gallery'] = $gallery;

            }

            $pages->data = json_encode( $post['info'],JSON_UNESCAPED_UNICODE );

            if( ! $pages->save() ){
                print_r($pages->getErrors());
                exit;
            }

            return $this->redirect('/admin/pages/services-parts');

        }

        return $this->render('services-parts', [
            'data' => $data,
        ]);
    }

    public function actionServicesFaq(){

        if($pages = Pages::find()->where(['page'=>'services-faq'])->one()) {
            $data = json_decode($pages->data, true);
        }else{
            $pages = new Pages();
            $pages->page = 'services-faq';
            $data=[];
        }

        $post = Yii::$app->request->post();

        if( isset($post['Pages']['page']) && $post['Pages']['page'] == 'services-faq' ){

            $pages->data = json_encode($post['info'],JSON_UNESCAPED_UNICODE);

            // изображения инфо блока салон на главной
            if( $file = UploadedFile::getInstance($pages, 'tmp_image' ) ){

                $fname =  'faq.jpg';

                $path = Yii::getAlias("@frontend/web/uploads/services/" );

                if(!is_dir($path)) @mkdir($path);

                // основная картинка - оригинал
                $file->saveAs($path . $fname );

            }

            if(!$pages->save()){
                print_r($pages->getErrors());
                exit;
            }

            return $this->redirect('/admin/pages/services-faq');

        }

        return $this->render('services-faq', [
            'data' => $data,
        ]);
    }

    public function actionLocalizationAbout(){

        if($pages = Pages::find()->where(['page'=>'localization-about'])->one()) {
            $data = json_decode($pages->data, true);
        }else{
            $pages = new Pages();
            $pages->page = 'localization-about';
            $data=[];
        }

        $post = Yii::$app->request->post();

        if( isset($post['Pages']['page']) && $post['Pages']['page'] == 'localization-about' ){

            $pages->data = json_encode($post['info'],JSON_UNESCAPED_UNICODE);

            // изображения инфо блока салон на главной
            if( $file = UploadedFile::getInstance($pages, 'tmp_image' ) ){

                $fname =  'loc-about.jpg';

                $path = Yii::getAlias("@frontend/web/uploads/products/" );

                if(!is_dir($path)) @mkdir($path);

                // основная картинка - оригинал
                $file->saveAs($path . $fname );

            }

            if(!$pages->save()){
                print_r($pages->getErrors());
                exit;
            }

            return $this->redirect('/admin/pages/localization-about');

        }

        return $this->render('localization-about', [
            'data' => $data,
        ]);
    }

}
