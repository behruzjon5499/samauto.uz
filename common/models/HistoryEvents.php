<?php

namespace common\models;

use Yii;
use yii\imagine\Image;
use yii\web\UploadedFile;

/**
 * This is the model class for table "history".
 *
 * @property int $id
 * @property string $title_ru
 * @property string $title_uz
 * @property string $title_en
 * @property string $text_ru
 * @property string $text_uz
 * @property string $text_en
 * @property int $status
 */
class HistoryEvents extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'history_events';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['status'], 'integer'],
            [['text_uz', 'text_en','text_ru'], 'string'],
            [['title_ru', 'title_uz','title_en'], 'string', 'max' => 255],
            [['date'], 'string', 'max' => 10],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title_ru' => 'Заголовок Ru',
            'title_uz' => 'Заголовок Uz',
            'title_en' => 'Заголовок En',
            'text_ru' => 'Текст Ru',
            'text_uz' => 'Текст Uz',
            'text_en' => 'Текст En',
            'status' => 'Статус',
        ];
    }
    public function getGallery()
    {
        return $this->hasMany(HistoryGallery::className(), ['history_id'=>'id']); // TODO: Change the autogenerated stub
    }


    public function updateModel($is_new=false)
    {

        $post = Yii::$app->request->post();


        if($this->load($post) ) {

            if($is_new) {
                //echo '<pre>333';print_r([$post,$_FILES]); exit;

                $get = Yii::$app->request->get();
                $history_id = (int)@$get['history_id'];
                if(!$history_id) return false;
                $this->history_id = $history_id;
            } // чтобы получить model->id для фото


            if( !$this->save() ){
                Yii::$app->session->setFlash('info-error','Ошибка при сохранении!');
                print_r($this->getErrors());
                exit;

                return true;
            }

            // print_r($_FILES); exit;
            try {

                // изображения галереи
                if( $files = UploadedFile::getInstances($this, 'tmp_gallery_images' ) ) {

                    $deleted_files = explode(';', $post['delete_gallery_files']);

                    $i = 0;
                    foreach ($files as $file) {
                        $i++;
                        if( ! preg_match('/image/',$file->type) ) continue; // пропустить если не картинка

                        // данный файл удален пользователем
                        if (in_array($i, $deleted_files)) continue;

                        $fid = time() + $i;
                        $fname = $fid . '.' . $file->extension; // preg_replace('/tmp_/','',$image); //  убрать префикс

                        $path_main = Yii::getAlias("@frontend/web/uploads/history-events/{$this->id}");
                        $path = Yii::getAlias("@frontend/web/uploads/history-events/{$this->id}/gallery/");

                        if (!is_dir($path_main)) @mkdir($path_main);
                        if (!is_dir($path)) @mkdir($path);
                        if(!is_dir($path.'thumb')) @mkdir($path .'thumb');

                        // основная картинка - оригинал
                        $file->saveAs($path . $fname); // . $file->extension);

                        $gallery = new HistoryGallery();
                        $gallery->image = $fname;
                        $gallery->history_id = $this->id;
                        $gallery->save();

                        $filepath = $path . $fname ;

                        // эскиз
                        Image::thumbnail($filepath, 150, 90)
                            ->save($path . 'thumb/' . $fname , ['quality' => 100]);

                        // эскиз
                        Image::thumbnail($filepath, 1200, 740)
                            ->save($path . $fname , ['quality' => 100]);

                    }
                }

            }catch (Exception $e) {
                print_r($e);
                exit;
            }

            if( !$this->save() ){
                Yii::$app->session->setFlash('info-error','Ошибка при сохранении!');
                print_r($this->getErrors());
                exit;

                return true;
            }

            Yii::$app->session->setFlash('info-success','Запись успешно добавлена!');

            return true;
        }
        return false;

    }

}
